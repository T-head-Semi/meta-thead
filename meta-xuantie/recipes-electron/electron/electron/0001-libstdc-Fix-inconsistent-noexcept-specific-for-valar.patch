From ad3c3c953edc8f211ff82ad2511aeb0ad7177e7d Mon Sep 17 00:00:00 2001
From: lucz <chongzhi.lcz@alibaba-inc.com>
Date: Thu, 1 Feb 2024 15:15:10 +0800
Subject: [PATCH] libstdc++: Fix inconsistent noexcept-specific for valarray
 begin/end

---
 .../include/c++/10.4.0/bits/range_access.h                | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/riscv64-unknown-linux-gnu/include/c++/10.4.0/bits/range_access.h b/riscv64-unknown-linux-gnu/include/c++/10.4.0/bits/range_access.h
index aee72c3..98c81a1 100644
--- a/riscv64-unknown-linux-gnu/include/c++/10.4.0/bits/range_access.h
+++ b/riscv64-unknown-linux-gnu/include/c++/10.4.0/bits/range_access.h
@@ -104,10 +104,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<typename _Tp> class valarray;
   // These overloads must be declared for cbegin and cend to use them.
-  template<typename _Tp> _Tp* begin(valarray<_Tp>&);
-  template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);
-  template<typename _Tp> _Tp* end(valarray<_Tp>&);
-  template<typename _Tp> const _Tp* end(const valarray<_Tp>&);
+  template<typename _Tp> _Tp* begin(valarray<_Tp>&) noexcept;
+  template<typename _Tp> const _Tp* begin(const valarray<_Tp>&) noexcept;
+  template<typename _Tp> _Tp* end(valarray<_Tp>&) noexcept;
+  template<typename _Tp> const _Tp* end(const valarray<_Tp>&) noexcept;
 
   /**
    *  @brief  Return an iterator pointing to the first element of
-- 
2.17.1

